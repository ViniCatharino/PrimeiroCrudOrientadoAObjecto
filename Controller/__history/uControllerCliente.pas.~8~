unit uControllerCliente;

interface

uses
  uCliente,
  uDAOCliente,
  System.Generics.Collections;
type
  TControllerCliente = class
    private

    public
    class function InserirNovoCliente(ACLiente : TCliente) : boolean;
    class function EditarCliente(AID                    : Integer;
                                 ANome,ATelefone,AEmail : String)      : Boolean;
    class function ListarClientes : TObjectList<TCliente>;
    class function ListarClientesPorId(AID :Integer): TCliente;
  end;


implementation

{ TControllerCliente }

class function TControllerCliente.EditarCliente(AID                    : Integer;
                                                ANome, ATelefone,AEmail: String): Boolean;
var
  LCliente : TCliente;
  LDao     : TDAOCliente;
begin

  Result := False;

  LCliente := TCliente.Create;
  try
    LCliente.SetId(AID);
    LCliente.SetNome(ANome);
    LCLiente.SetTelefone(ATelefone);
    LCliente.SetEmail(AEmail);

    LDao := TDAOCliente.Create;
    try
      Result := LDao.Alterar(LCliente);
    finally
      LDao.Free;
    end;

  finally
    LCliente.Free;
  end;

end;

class function TControllerCliente.InserirNovoCliente(ACLiente : TCliente) :Boolean;
var
  LDao     : TDaoCliente;
begin

  Result := False;
  LDao := TDaoCliente.Create;
  try
    Result := Ldao.Inserir(ACliente);
  finally
    LDao.Free;
  end;



end;

class function TControllerCliente.ListarClientes: TObjectList<TCliente>;
var
  LDAO : TDaoCliente;
begin

  LDAO := TDAOCLiente.Create;
  try
    Result := LDAO.listarTodas;
  finally
    LDAO.Free;
  end;

end;

class function TControllerCliente.ListarClientesPorId(AID :Integer): TCliente;
var
  LDAO : TDaoCliente;
begin

  LDAO := TDAOCLiente.Create;
  try
    Result := LDAO.listarPorId(AId);
  finally
    LDAO.Free;
  end;

end;

end.
